1. Write tests for Validator and Chess methods
  - Skipping for the sake of time :/

2. Continue turn loop from chess.rb:29

2.look at project_plan/chess_psuedocode.txt and continue from where you are

3. W/e order for these:
  - consider moving converter methods from chess to another class
  - I think you can remove the #convert_notation_to_column_index and #convert_notation_to_row_index tests in chess_spec.rb and then move those methods to private b/c eventually a public method is going to call them where they will be tested
  - Write tests
  - can I make symbols bigger?
  - for Interface#solicit_player_action, create some mechanism that allows the player to enter 'help' for instructions about Chess notation

4. At the end, re-read the illustrated chess rules site to see if I missed anything

5. at the end use the rubocop command line thing, also read through everything and refactor

Extras
  - Decide player color randomly
  - Add functionality for special moves - Castling, En passant, Promotion
  - Code for standard chess notation: see branch standard_notation
  - Move piece class files into lib/pieces
  - Potential improvement (but big change): code board as a grid object, one where each cell has pointers to all of its neighbors
  - Look at another project to see where my require_relatives should be? (in the driver script/test scripts or within each class?)
