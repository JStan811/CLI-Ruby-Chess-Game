Areas for Improvement
   - Write full test suite
    - Think about or look up common check and checkmate positions and create boards in those positions (or one move prior to them) to test
  - add in support for Castling, En passant
  - Decide player color randomly
  - Add new game? feature when game ends
  - Code for standard chess notation: see branch standard_notation
  - Move piece class files into lib/pieces
  - Potential improvement (but big change): code board as a grid object, one where each cell has pointers to all of its neighbors
  - Look at another project to see where my require_relatives should be? (in the driver script/test scripts or within each class?)
  - Add display messages for different events: "Pawn captures pawn.", "Pawn promoted to Queen.", "Player 2 King in check", etc.
  - Add support for game draws other than stalemate (see Wiki for types).
  - flip the board when active player switches
  - can I make symbols bigger?
  - when saving, allow player to overwrite earlier game file. Also could allow player to delete a file
  - from Odin: "(Optional extension) Build a very simple AI computer player (perhaps who does a random legal move)"
