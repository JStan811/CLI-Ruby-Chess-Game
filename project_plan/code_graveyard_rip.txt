I originally wrote these tests in chess_spec.rb but later made the methods private:

  def convert_notation_to_column_index(notated_cell)
    notated_cell_as_char_array = notated_cell.split('')
    notated_column = notated_cell_as_char_array[0]
    char_codepoint = notated_column.ord
    char_codepoint - 97
  end

  def convert_notation_to_row_index(notated_cell)
    notated_cell_as_char_array = notated_cell.split('')
    notated_row = notated_cell_as_char_array[1].to_i
    notated_row - 1
  end

Used these for testing before I had a board display:

  def pretty_print_board_text(board)
    board.cells.each_with_index do |row, index|
      print "row #{index + 1}: "
      row.each do |cell|
        if cell.piece.nil?
          print 'empty '
        else
          print "#{cell.piece.color} #{cell.piece.class} "
        end
      end
      puts
    end
  end

  def pretty_print_board_symbols
    @board.cells.each_with_index do |row, index|
      print "row #{index + 1}: "
      row.each do |cell|
        if cell.piece.nil?
          print 'empty '
        else
          print "#{cell.piece.symbol} "
        end
      end
      puts
    end
  end

These were at the bottom of my Chess class but weren't used anywhere. Not sure why I had them:

  def determine_piece_type_from_notated_cell(player_action)
    @game.board.convert_notation_to_piece_type(notated_cell)
  end

  def determine_piece_color_from_action(player_action)
    @game.board.convert_notation_to_piece_color(notated_cell)
  end

Used these in game_builder.rb for testing if the stalemate feature works (these can probably be adapted to tests):

  def build_pre_stalemate_board_v1
    place_piece(0, 7, King.new('Black', player2))
    place_piece(1, 4, Queen.new('White', player1))
    place_piece(7, 0, King.new('White', player1))
  end

  def build_pre_stalemate_board_v2
    place_piece(7, 0, King.new('Black', player2))
    place_piece(2, 0, Bishop.new('Black', player2))
    place_piece(3, 5, Pawn.new('Black', player2))
    place_piece(4, 7, Pawn.new('Black', player2))
    place_piece(0, 7, King.new('White', player1))
    place_piece(0, 2, Queen.new('White', player1))
    place_piece(0, 0, Rook.new('White', player1))
    place_piece(2, 5, Knight.new('White', player1))
    place_piece(3, 7, Pawn.new('White', player1))
    place_piece(6, 7, Rook.new('White', player1))
  end
